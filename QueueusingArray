#include <stdio.h>
#include <conio.h>
#define MAX 5

int queue[MAX];
int front = -1;
int rear = -1;

void enqueue() {
    int x;
    printf("enter data to insert in queue :\n");
    scanf("%d",&x);
    if (rear == MAX - 1) {
        printf("Queue is full\n");
    } else if (front == -1 && rear == -1) {
        front = rear = 0;
        queue[rear] = x;
    } else {
        rear++;
        queue[rear] = x;
    }
}

void deque() {
    if (front == -1 && rear == -1) {
        printf("Underflow\n");
    } else if (front == rear) {
        printf("%d\n", queue[front]);
        front = rear = -1;  
    } else {
        printf("%d deleted from queue\n ", queue[front]);
        front++;
    }
}

void display() {
    int i;
    if (front == -1 && rear == -1) {
        printf("Queue is empty\n");
    } else {
        for (i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

void peek() {
    if (front == -1 && rear == -1) {
        printf("Queue is empty\n");
    } else {
        printf("%d\n", queue[front]);
    }
}

int main() {
    int choice;
    char ch;
    
    do {
        printf("1: Insert, 2: Delete, 3: Display, 4: Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                enqueue(2); 
                break;
            case 2:
                deque();
                break;
            case 3:
                display();
                break;
            case 4:
                return 0; 
            default:
                printf("Invalid choice\n");
                break;
        }

        printf("Press y to continue: ");
        ch = getch();
        
    } while (ch == 'y' || ch == 'Y');
    
    return 0;
}
